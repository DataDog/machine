image: docker:19.03.2

stages:
- prepare
- validate
- build

variables:
  USE_CONTAINER: "true"
  CI_IMAGE: registry.gitlab.com/gitlab-org/ci-cd/docker-machine/ci:alpine3.10

.docker_in_docker:
  services:
  - docker:19.03.2-dind
  variables:
    DOCKER_HOST: tcp://docker:2376/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  tags:
  - docker

.merge_request_pipelines:
  only:
    refs:
    - merge_requests
    - master@gitlab-org/ci-cd/docker-machine
    - tags@gitlab-org/ci-cd/docker-machine

.build_base: &build_base
  extends:
  - .docker_in_docker
  - .merge_request_pipelines
  stage: build
  before_script:
  - apk add -U make bash
  - export TARGET_OS=$(echo $CI_JOB_NAME | cut -d ' ' -f 1)
  - export TARGET_ARCH=$(echo $CI_JOB_NAME | cut -d ' ' -f 2)
  after_script:
  - "[[ \"$(find bin -type f -name docker-machine*)\" != \"\" ]]"
  artifacts:
    paths:
    - bin/
    expire_in: 1 week

.build_validate: &build_validate
  <<: *build_base
  stage: validate
  script: make build validate

.build_x: &build_x
  <<: *build_base
  script: make build-x

prepare CI image:
  extends:
  - .docker_in_docker
  - .merge_request_pipelines
  stage: prepare
  script:
  - docker build --pull --no-cache -t ${CI_IMAGE} -f ./.gitlab/ci/Dockerfile ./.gitlab/ci/
  - docker login --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  - docker push ${CI_IMAGE}
  - docker logout ${CI_REGISTRY}
  only:
    changes:
    - ./gitlab/ci/Dockerfile
    - .gitlab-ci.yml

darwin amd64: *build_x
linux amd64: *build_validate
openbsd amd64: *build_x
windows amd64: *build_x
linux arm: *build_x
linux arm64: *build_x

